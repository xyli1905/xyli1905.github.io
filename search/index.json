
{ "results": [



    {
    "url": "https://xyli1905.github.io/2014/09/creating-a-new-theme/",
    "title": "Creating a New Theme",
    "content": "introduction tutorial will show you how to create simple theme hugo. assume that are familiar with html, the bash command line, comfortable using markdown format content. i&rsquo;ll explain hugo uses templates can organize your theme. won&rsquo;t cover css style we&rsquo;ll start creating new site very basic template. then add few pages posts. small variations on that, be able many different types of web sites. tutorial, commands enter prompt. output follow. lines comments i&rsquo;ve added point. when updates file, :wq last line means save file. here&rsquo;s an example: ## comment echo edit file vi foo.md +++ date &quot;2014-09-28&quot; title &quot;creating theme&quot; bah humbug it cat some definitions there concepts need understand before skins files responsible for look feel site. it’s controls colors fonts, javascript determines actions reactions. also rules transform content into html serve visitors. have two ways skin. simplest way layouts/ directory. if do, don’t worry about configuring recognize it. first place directory so always find second choice sub-directory themes/ must tell where search extra work, though, why bother it? difference between skin subtle. can’t customized without updating static built from. created themes/, other hand, makes easier people use rest call note wish to. main won’t update site’s configuration home page page, landing visitors see. index.html root since writes public/ directory, our public/index.html. runs, looks contains settings override default values entire toml, yaml, json. prefer toml my files. json you’ll translate examples. change name extension determine process translates html. by default, expects content/ template specifying alternate locations stored text contain sections. section “front matter,” which meta-information converted front matter information like written unlike doesn’t file’s know format. markers signal type. surrounded “+++”, yaml “---”, enclosed curly braces. examples passed rendered runs through engine render bridge presentation. define what published, it&rsquo;s published to, guides presentation use. three templates: single, list, partial. each type takes bit as input transforms based its knowledge used exact match content, shift up level from there. continue do until finds matching out try. template, please influence hugo’s templates. single piece example, article post would list renders group related could summary recent postings all articles category. multiple groups. homepage special assumes act portal partial included called “partial” command. they handy rolling common behavior. may banner instead copying every decide banner, only let&rsquo;s i&rsquo;m mac user, mine sites folder. you&rsquo;re linux, might folder first. skeleton give structure useable ~/sites/zafta cd ls -l total drwxr-xr-x quoha staff 238 sep 29 16:49 102 .. 68 archetypes -rw-r--r-- 82 config.toml layouts take confirm empty. directories (archetypes/, layouts/, static/) customizing that&rsquo;s topic ignore them now. generate running options read available copy (that&rsquo;s everything not content). we empty site, much, but quickly. --verbose info: 2014/09/29 config file: syncing /users/quoha/sites/zafta/static/ /users/quoha/sites/zafta/public/ warn: unable locate layout: [index.html _default/list.html _default/single.html] [404.html] draft future tags categories ms flag gives helpful build starts present because flag. warning messages. go over later. verify worked looking at again. 136 17:02 public see directory? placed generated ready publish start. now, just we&rsquo;d expect 16 416 index.xml 262 sitemap.xml xml files, standard, test run built-in server. dramatically shorten development cycle do. server successful, similar following: /users/quoha/sites/zafta/config.toml serving /users/quoha/sites/zafta/public http://localhost:1313 press ctrl+c stop connect listed url (it&rsquo;s server). working correctly, should get shows listing didn&rsquo;t has there&rsquo;s lists browser. let’s back those warnings explain. haven’t “page found errors.” 404 message separate tutorial. now warning. page. layout looked was “index.html.” that’s verbose causes searching for. index.html, _default/list.html, _default/single.html. later names paths. remember couldn&rsquo;t told so. point, you&rsquo;ve got installation upon. left display doesn&rsquo;t ship (i counted dozen installed hugo) comes themes. we&rsquo;re going zafta. goal fill pull any css. words, ugly functional. themes opinions layout. zafta blog. strong make simpler differing tougher theme, consider terms creates places out. 17:31 -type xargs 1081 themes/zafta/license.md themes/zafta/archetypes/default.md themes/zafta/layouts/_default/list.html themes/zafta/layouts/_default/single.html themes/zafta/layouts/index.html themes/zafta/layouts/partials/footer.html themes/zafta/layouts/partials/header.html 93 themes/zafta/theme.toml includes (the ending .html), license description theme.toml file), archetype. minute license.md they&rsquo;re optional, distributing tells world who praise (or blame). nice declare author &quot;michael henderson&quot; &quot;a minimal template&quot; &quot;mit&quot; &quot;zafta&quot; source_repo &quot;&quot; [&quot;tags&quot;, &quot;categories&quot;] says &quot;your_name_here&quot; skeleton&rsquo;s don&rsquo;t worry, changing shortly. themes/zafta -name '*.html' we&rsquo;ve work with, good idea -t commands. put shorter lines. specify expecting baseurl languagecode &quot;en-us&quot; &quot;zafta totally refreshing&quot; metadataformat &quot;toml&quot; /users/quoha/sites/zafta/themes/zafta/static/ [404.html theme/404.html] did notice different? disappeared additional saying theme&rsquo;s check hugo&rsquo;s created. 17:56 407 js 243 four things: css/ js/ claimed pages. copied considers directly count things automatically. supports gets own layouts/index.html, documentation required depends. can&rsquo;t these, completely skips noticed having installed. empty, too. had it, 20:21 ./public/index.html ./themes/zafta/layouts/index.html magic does generating copies transformed. exactly are. both javascript, hold them. opinions? well, opinion you&rsquo;ll store named js/. even delete completely. enough offer opinion, behave nicely disagree. -ld 17:38 themes/zafta/archetypes 170 themes/zafta/layouts themes/zafta/layouts/_default themes/zafta/layouts/partials themes/zafta/static themes/zafta/static/css themes/zafta/static/js changes rebuild easy: purge watch mode. open glance browser window changes. return step 4. i’ll throw one more opinion: never live them, safety, tool git keep revision history believe me say too easy lose mind existing ones longer used. were wrong remain. leave confused recommend cleaning prior note: building ssd, this. churning ssd costly. option --watch monitor reload reload. saved server, refresh usually, happens faster than say, wow, amazing. following basis workflow. old recreate rm -rf mode sample showing detecting once generated, automatically reloaded said before, watching /users/quoha/sites/zafta/content system event: [&quot;/users/quoha/sites/zafta/themes/zafta/layouts/index.html&quot;: modify|attrib] detected, rebuilding mentioned earlier, layout/ directory: _default/single.html templates, design decision most specific available. hard fast rule (in fact, break times tutorial), generalization. right logic adding &lt;!doctype html&gt; &lt;html&gt; &lt;body&gt; &lt;p&gt;hugo hello!&lt;/p&gt; &lt;/body&gt; &lt;/html&gt; results. 78 21:26 public/index.html option, &lt;script&gt;document.write('&lt;script src=&quot;http://' (location.host || 'localhost').split(':')[0] ':1313/livereload.js?mindelay=10&quot;&gt;&lt;/' 'script&gt;')&lt;/script&gt;&lt;/body&gt; --watch, script disable dynamic page? generator, seems odd thing say. mean reflect time builds iteration that. posts these their post, post/first.md attempting curpath: /users/quoha/sites/zafta/themes/zafta/archetypes/default.md error: cast &lt;nil&gt; map[string]interface{} wasn&rsquo;t nice, archetype error me, workaround specifically themes/zafta/archetypes/post.md [] 21:53 51 21:54 /users/quoha/sites/zafta/themes/zafta/archetypes/post.md /users/quoha/sites/zafta/content/post/first.md post/second.md /users/quoha/sites/zafta/content/post/second.md content/post 104 first.md 105 21:57 second.md content/post/first.md &quot;2014-09-29t21:54:53-05:00&quot; &quot;first&quot; content/post/second.md &quot;2014-09-29t21:57:09-05:00&quot; &quot;second&quot; taxonomies: map[string]string{&quot;category&quot;:&quot;categories&quot;, &quot;tag&quot;:&quot;tags&quot;} posts: 22:13 public/post/first/index.html public/post/index.html public/post/second/index.html either. hugo, major kinds updated previously. pieces output. generally speaking, list.html single.html. partials, views, terms. much detail these. {{ range 10 .data.pages }} &lt;h1&gt;{{ .title }}&lt;/h1&gt; end engine. scans }}. are: iterator. ten treated looping prints value variable. pulls signals loops top end. evaluated goes iteration. cause heading one. variables, .data, loads variable chance map[string]string{&quot;tag&quot;:&quot;tags&quot;, &quot;category&quot;:&quot;categories&quot;} 94 22:23 &lt;h1&gt;second&lt;/h1&gt; &lt;h1&gt;first&lt;/h1&gt; congratulations, themselves still moment appreciate done. generates dynamically. not, inserting inside braces, learned really understanding becoming and, entirely true, shorter. easier. come. posts, content/post/ (and something weird, post). matches name. one, _default/ twists tags, try post/single.html, rule, actually available: single.html 132 default. types, remember, haven&rsquo;t bad. bad undoing made. immediate here refactor move around. fairly painless, accept cost proceed. rendering details determining docs mention, application (spa) refreshing amount joy &lt;head&gt; &lt;title&gt;{{ }}&lt;/title&gt; &lt;/head&gt; .content 22:40 125 128 &lt;title&gt;first&lt;/title&gt; &lt;p&gt;my post&lt;/p&gt; &lt;title&gt;second&lt;/title&gt; localhost:1313/post/first verify. linking link post. &lt;h1&gt;&lt;a href=&quot;{{ .permalink }}&quot;&gt;{{ }}&lt;/a&gt;&lt;/h1&gt; 149 22:44 href=&quot;/post/second/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt; href=&quot;/post/first/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt; displaying (not ten). update. listing, quick post/list.html. stay consistent (as opposed sub-level posts). guide location level: content/about.md &quot;about&quot; &quot;about site&quot; &quot;2014-09-27&quot; slug time&quot; us i'm speechless -rw-rw-r-- mdhender 334 27 15:08 public/about-time/index.html 527 358 public/post/first-post/index.html 342 public/post/second-post/index.html level. &lsquo;about-time/&rsquo;. came slug. reasonable way, learn fighting thing. href=&quot;http://localhost:1313/post/theme/&quot;&gt;creating theme&lt;/a&gt;&lt;/h1&gt; href=&quot;http://localhost:1313/about-time/&quot;&gt;about&lt;/a&gt;&lt;/h1&gt; href=&quot;http://localhost:1313/post/second-post/&quot;&gt;second&lt;/a&gt;&lt;/h1&gt; href=&quot;http://localhost:1313/post/first-post/&quot;&gt;first&lt;/a&gt;&lt;/h1&gt; posts? desirable, &lt;h1&gt;posts&lt;/h1&gt; eq .type &quot;post&quot;}} &lt;h2&gt;&lt;a }}&lt;/a&gt;&lt;/h2&gt; &lt;h1&gt;pages&lt;/h1&gt; &quot;page&quot; sections, pages, set headings links but, about-time/index.html. 15:33 645 knowing name, solution permalink [permalinks] &quot;/:title/&quot; &quot;/:filename/&quot; work. lets permalinks setting ahead content/about.md, place. sharing been along, probably titles doesn&rsquo;t. page&rsquo;s (layouts/index.html). option. bits shared themes/zafta/layouts/partials/ header footer partials sugar-coated normally reference path specified. different. searches along todo defined path. end-users noticeable lack path: &quot;theme/partials/header.html&quot; versus &quot;header.html&quot; pass context. partials. (eq &quot;page&quot;) &quot;about&quot;) .relpermalink &quot;footer.html&quot; here, “date published” date. usually created, pretend want display. code like: .date.format &quot;mon, jan 2, 2006&quot; &lt;h2&gt;{{ }}&lt;/h2&gt; displayed problem, though. displayed. usual, couple statement another works types. aligns principle today, assume, made complex hugo-speak, restore forget. mkdir themes/zafta/layouts/post post&rsquo;s version rules, themes/zafta/layouts/post/single.html removed dates repeat yourself dry great job supporting part art while figuring out, doing refactoring. fast, okay delay splitting "
    },

    {
    "url": "https://xyli1905.github.io/2014/03/migrate-from-jekyll/",
    "title": "Migrate to Hugo from Jekyll",
    "content": "move static content to jekyll has rule that any directory not starting with will be copied as-is the _site output. hugo keeps all under static. you should therefore it there. jekyll, something looked like &lt;root&gt;/ images/ logo.png become static/ additionally, you&rsquo;ll want files reside at root (such as cname) moved create your configuration file can read json, yaml toml. supports parameters custom too. refer documentation for details. set publish folder default public. if, me, have mapped git submodule on gh-pages branch, do one of two alternatives: change point map public instead (recommended). deinit rm add -b git@github.com:your-username/your-repo.git or, use .. &quot;publishdir&quot;: &quot;_site&quot;, convert templates that&rsquo;s bulk work right here. friend. jekyll&rsquo;s template if need refresh memory how built blog hugo&rsquo;s learn way. single reference data point, converting my heyitsalex.net took me more than few hours. plugins shortcodes plugins; shortcodes. it&rsquo;s fairly trivial port. implementation an example, was using image_tag plugin generate figures caption when running jekyll. about shortcodes, found had nice built-in shortcode does exactly same thing. plugin: module class imagetag &lt; liquid::tag @url nil @caption @class @link // patterns image_url_with_class_and_caption image_url_with_class_and_caption_and_link /(\w+)(\s+)((https?:\/\/|\/)(\s+))(\s+)&quot;(.*?)&quot;(\s+)-&gt;((https?:\/\/|\/)(\s+))(\s*)/i image_url_with_caption /((https?:\/\/|\/)(\s+))(\s+)&quot;(.*?)&quot;/i image_url_with_class /(\w+)(\s+)((https?:\/\/|\/)(\s+))/i image_url /((https?:\/\/|\/)(\s+))/i def initialize(tag_name, markup, tokens) super markup =~ $1 $3 $7 $9 elsif $5 end render(context) source &quot;&lt;figure class='#{@class}'&gt;&quot; else &quot;&lt;figure&gt;&quot; += &quot;&lt;a href=\&quot;#{@link}\&quot;&gt;&quot; &quot;&lt;img src=\&quot;#{@url}\&quot;&gt;&quot; &quot;&lt;/a&gt;&quot; &quot;&lt;figcaption&gt;#{@caption}&lt;/figcaption&gt;&quot; &quot;&lt;/figure&gt;&quot; liquid::template.register_tag('image', jekyll::imagetag) written shortcode: &lt;!-- image --&gt; &lt;figure {{ .get &quot;class&quot; }}class=&quot;{{.}}&quot;{{ }}&gt; &quot;link&quot;}}&lt;a href=&quot;{{.}}&quot;&gt;{{ }} &lt;img src=&quot;{{ &quot;src&quot; }}&quot; (.get &quot;alt&quot;) &quot;caption&quot;) }}alt=&quot;{{ &quot;alt&quot;}}{{.}}{{else}}{{ &quot;caption&quot; }}{{ }}&quot;{{ /&gt; &quot;link&quot;}}&lt;/a&gt;{{ (or &quot;title&quot;) &quot;caption&quot;)) &quot;attr&quot;)}} &lt;figcaption&gt;{{ isset .params &quot;title&quot; &quot;attr&quot;)}}&lt;p&gt; &quot;attrlink&quot;}}&lt;a href=&quot;{{.}}&quot;&gt; &quot;attr&quot; &quot;attrlink&quot;}}&lt;/a&gt; &lt;/p&gt; &lt;/figcaption&gt; &lt;/figure&gt; usage simply changed: {% full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &quot;one favorite touristy-type photos. secretly waited good light while we were &quot;having fun&quot; this. only regret: stupid pole top-left corner frame clumsily get rid post-processing.&quot; -&gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %} (this example uses slightly extended version named fig, different figure): {{% fig class=&quot;full&quot; src=&quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&quot; title=&quot;one having fun link=&quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&quot; %}} bonus, are, arguably, readable. finishing touches fix depending amount customization done each post step require less effort. there are hard fast rules here except server --watch test changes errors needed. clean up remove point. anything isn&rsquo;t used, delete it. practical diff hey, alex migrated father-with-kids day from hugo. see (and screw-ups) by looking diff. "
    },

    {
    "url": "https://xyli1905.github.io/2019/07/variational-form-for-hx/",
    "title": "Variational Form for H(x)",
    "content": "for continuum random variable $x$, the differential entropy id defined as $$\int p(x)\log\dfrac{1}{p(x)}\,\text{d}x,\tag{1}$$ where $p(x)$ distribution $x$. function $-\log v$ strictly convex, let $\phi$ be its conjugate dual function, then \underset{u\in\mathbb{r}}{\text{sup}}\left[uv \phi(u)\right]$, $\phi(u) -1 \log(-u)$ $u&lt;0$ $+\infty$ otherwise. using above, we have $$\begin{aligned} \int p(x)\log\frac{1}{p(x)}\,\text{d}x &amp;= p(x)\left(- \log\frac{1}{p(x)}\right)\,\text{d}x \\&amp;= -\int p(x) \underset{f}{\text{sup}}\left[ f(x)\frac{1}{p(x)} \phi(f) \right]\,\text{d}x -\underset{f}{\text{sup}}\left[ f(x)\,\text{d}x \phi(f)p(x)\,\text{d}x\right] \mathbb{e}_{p}[\phi(f)]\right]\end{aligned}$$ supremum are taken over all measurable functions $f:\mathcal{x} \rightarrow \mathbb{r}$ ($\mathcal{x}$ being sample space). also see any class $\mathbf{f}$ that maps from $\mathcal{x}$ to $\mathbb{r}$, it holds p(x)\log\dfrac{1}{p(x)}\,\text{d}x \le -\underset{f(x)\in\mathbf{f}}{\text{sup}}\left[ \mathbb{e}_{p}[\phi(f)]\right]. $$ approximated with empirical mean, following expression \frac{1}{n}\sum_i^n[\phi(g(x_i))]\right]$$ $x_i$ samples $p(x)$. specifically, case, -\underset{g&gt;0}{\text{sup}}\left[\frac{1}{n}\sum_i^n \log g(x_i) g(x)\,\text{d}x 1\right], substitute $f -g$. may further restrict space reproducing kernel hilbert (rkhs) induced by gaussian kernel. $\mathcal{g}$ refer rkhs use rkhs, there feature \psi_x $, \mathcal{g} can cast into x-representation g(x) \langle g, \psi_x\rangle $k$, one has $k(x, y) \psi_x, \psi_y\rangle$ kernel: k(x,y) e^{-|x-y|^2/\sigma}. seek an optimal solution $\hat{g}$ entropy, eq.(1) property of need solve $$\hat{g}=\underset{g\in\mathcal{g}}{\text{arg}\min} \frac{1}{n}\sum_i^n\log\langle g,\psi(x_i) \rangle \frac{\lambda_n}{2}\mathbf{i}^2(g)$$ $\frac{\lambda_n}{2}\mathbf{i}^2(g)$ regularization term reduces searching $\mathcal{g}$. choose $\mathbf{i}^2(g)=|g|^2_{\mathcal{g}}$. what new form after applying inf-convolution theorem? \psi_x\rangle\,\text{d}x "
    },

    {
    "url": "https://xyli1905.github.io/about/",
    "title": "About Hugo",
    "content": "hugo the world’s fastest framework for building websites. it written go. makes use of variety open source projects including: https://github.com/russross/blackfriday https://github.com/alecthomas/chroma https://github.com/muesli/smartcrop https://github.com/spf13/cobra https://github.com/spf13/viper learn more contribute on github. "
    },

    {
    "url": "https://xyli1905.github.io/2014/04/goisforlovers/",
    "title": "(Hu)go Template Primer",
    "content": "hugo uses the excellent go html/template library for its template engine. it an extremely lightweight engine that provides very small amount of logic. our experience just right logic to be able create good static website. if you have used other systems from different languages frameworks will find lot similarities templates. document brief primer on using docs provide more details. introduction templates simple language. adheres belief only most basic belongs view layer. one consequence simplicity parse quickly. unique characteristic they are content aware. variables sanitized depending context where used. details can found docs. syntax golang html files with addition functions. functions accessible within {{ }} accessing predefined variable foo: foo parameters separated spaces calling add function input 1, 2: methods fields accessed via dot notation page parameter bar .params.bar parentheses group items together (isset .params &quot;alt&quot;) &quot;caption&quot;) caption end each has struct (object) made available it. passed either node which type rendering. page. by referencing name. &lt;title&gt;{{ .title }}&lt;/title&gt; also defined referenced. $address := &quot;123 main st.&quot;}} ship few functionality. system mechanism applications extend their own. some additional functionality we believe useful building websites. called name followed required spaces. cannot added without recompiling hugo. example: includes when including another pass data access. along current please remember include trailing dot. location always starting at /layout/ directory &quot;chrome/header.html&quot; iteration conditional like go, make heavy use range iterate over map, array slice. following examples how range. example 1: declaring value {{range $element array}} key $index, $index conditionals if, else, with, or, &amp; framework handling range, statement closed end. treat values as false: false any array, slice, string length zero isset &quot;title&quot; }}&lt;h4&gt;{{ index }}&lt;/h4&gt;{{ -&gt; else &quot;alt&quot; {{else}} &quot;caption&quot; 3: (or &quot;title&quot;) &quot;caption&quot;)) &quot;attr&quot;)}} 4: alternative way writing then same instead. rebinds scope, skips block absent. first above could simplified as: .params.title 5: pipes powerful components ability stack actions after another. done pipes. borrowed unix pipes, concept simple, pipeline&rsquo;s output becomes pipe. because templates, pipe essential being chain calls. limitation work single last next pipeline. should help convey eq does look odd place end, but illustration &quot;disqus_url&quot; access disqus_url escape html. stuff here rewritten &quot;attr&quot; (aka. dot) easily overlooked understand about refers context. top level your set inside item. loop changed. longer refer entire need likely want instead $title .site.title .params.tags &lt;li&gt; &lt;a href=&quot;{{ $baseurl }}/tags/{{ urlize }}&quot;&gt;{{ }}&lt;/a&gt; &lt;/li&gt; notice once entered outside so loop. option passing language through site configuration (for sitewide values), meta specific piece content. define (supported front matter/config format) them however (page) happens matter. documentation site. pages benefit having table contents provided. sometimes toc doesn&rsquo;t sense. we&rsquo;ve matter turn off displayed. matter: --- title: &quot;permalinks&quot; date: &quot;2013-11-18&quot; aliases: &quot;/doc/permalinks/&quot; groups: [&quot;extras&quot;] groups_weight: 30 notoc: true corresponding code template: not .params.notoc &lt;div id=&quot;toc&quot; class=&quot;well col-md-4 col-sm-6&quot;&gt; .tableofcontents &lt;/div&gt; (config) top-level file (eg, config.yaml) parameters, chrome. instance, might declare: params: copyrighthtml: &quot;copyright &amp;#xa9; 2013 john doe. all rights reserved.&quot; twitteruser: &quot;spf13&quot; sidebarrecentlimit: footer layout, declare &lt;footer&gt; provided copyrighthtml provided, given, would html-safe, entity escaped again. let update config january 1st, hunting {{if .site.params.copyrighthtml}}&lt;footer&gt; class=&quot;text-center&quot;&gt;{{.site.params.copyrighthtml safehtml}}&lt;/div&gt; &lt;/footer&gt;{{end}} absent: {{with .site.params.twitteruser}}&lt;span class=&quot;twitter&quot;&gt; href=&quot;https://twitter.com/{{.}}&quot; rel=&quot;author&quot;&gt; &lt;img src=&quot;/images/twitter.png&quot; width=&quot;48&quot; height=&quot;48&quot; title=&quot;twitter: {{.}}&quot; alt=&quot;twitter&quot;&gt;&lt;/a&gt; &lt;/span&gt;{{end}} finally, pull magic constants out layouts, do so, such &lt;nav class=&quot;recent&quot;&gt; &lt;h1&gt;recent posts&lt;/h1&gt; &lt;ul&gt;{{range .site.params.sidebarrecentlimit .site.recent}} &lt;li&gt;&lt;a href=&quot;{{.relpermalink}}&quot;&gt;{{.title}}&lt;/a&gt;&lt;/li&gt; {{end}}&lt;/ul&gt; &lt;/nav&gt; "
    },

    {
    "url": "https://xyli1905.github.io/2014/04/hugoisforlovers/",
    "title": "Getting Started with Hugo",
    "content": "step 1. install hugo go to releases download the appropriate version for your os architecture. save it somewhere specific as we will be using next step. more complete instructions are available at 2. build docs has its own example site which happens also documentation you reading right now. follow following steps: clone repository into repo run server mode open browser http://localhost:1313 corresponding pseudo commands: git https://github.com/spf13/hugo cd /path/to/where/you/installed/hugo --source=./docs &gt; 29 pages created tags index 27 ms web press ctrl+c stop once you&rsquo;ve gotten here, along rest of page on local build. 3. change process by hitting ctrl+c. now going again, but time with watch mode. /path/to/hugo/from/step/1/hugo --watch watching changes /users/spf13/code/hugo/docs/content favorite editor one source content pages. how about changing very file fix typo. files found docs/content/. unless otherwise specified, located same relative location url, our case docs/content/overview/quickstart.md. file.. notice what happened terminal. detected, rebuilding 26 refresh observe that typo fixed. quick was. try before it&rsquo;s finished building. double dare you. having nearly instant feedback enables have creativity flow without waiting long builds. 4. fun best way learn something play it. "
    }

]}